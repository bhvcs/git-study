배경: 대학 생활하는 동안 github에 대한 이야기도 많았고, 사용도 꽤나 많이 했다. 하지만 그냥 학교에서 하라고 하는, 인터넷에서 하라고 하는 것만 따라서 해봤지, 구체적인 사용법에 대해선 모르고 있었다.
이런 github를 조금 더 제대로 사용할 수 있기를 바라며 공부하게 되었다.

계정 설정
  - 우리는 github에 우리의 이메일을 등록한다. 그리고 git에서 설정을 할 때도, git config 에 내 이메일을 등록한다. 왜할까?
  커밋을 날릴 때 git에서는 커밋 안의 이메일로 사용자를 식별한다고 한다. 그러니 git config에는 아무 이메일이나 적는 것이 아닌, 내가 올리고자 하는 git에 등록한 이메일을 등록해야 하겠다.
  - 2factor 인증이라는 것이 있다. 이는 이미 내가 인턴 회사에서 사용하고 있는 부분이다. 기존에는 아이디 비밀번호로 인증을 했다면, 2차 비밀번호를 사용해서 보안을 강화시키는 것이다.
  나는 현재 Authy라는 앱을 설치해서, 인증 번호를 받아 사용중이다.
github의 프로젝트 참여
  - git 워크플로우 관련 이야기를 할 때와 비슷한 흐름이다. 그래서 fork의 유용성에 맞추어 이야기 하겠다. github의 오픈 소스 프로젝트에 참여한다고 해보자. 그럴 때, 모두에게 push 권한을 줄 수는 없다.
  그래서 기여자는 먼저 메인 프로젝트를 fork한다. 그러면 사용자의 github 워크스페이스에 해당 프로젝트와 동일한 프로젝트가 복사되어 생성된다. 그러면 기여자는 로컬에서, 내 워크스페이스의 프로젝트에 push를
  하는 것이다. 그러고 github에서 push한 것을 확인해보면, 위쪽에 pull request라는 버튼이 생긴다. 이걸로 메인 프로젝트의 관리자에게 검토를 받을 수 있다.
  만약 fork를 사용하지 않았다면 git clone해서 수정하고, 수정 사항을 이메일로 보냈어야 할 것이다. 이것만 해도 fork를 통해 프로젝트에 참여하는 것의 장점이 느껴진다. 
  지금까지는 push 권한이 있는 프로젝트에만 참여해봐서 해당 플로우는 사용해보지 않았는데, push 권한이 없는 프로젝트에 참여할 때 유용하게 사용할 수 있을 것 같다.
